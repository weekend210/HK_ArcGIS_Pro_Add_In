<Window x:Class="HK_AREA_SEARCH.Views.CustomIntervalDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:HK_AREA_SEARCH.Views"
        mc:Ignorable="d" 
        Title="{Binding Title}" Height="300" Width="450"
        WindowStartupLocation="CenterOwner"
        SizeToContent="Height"
        MinHeight="250"
        MinWidth="400">
    
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <DataGrid Grid.Row="0" 
                  ItemsSource="{Binding ClassItems}"
                  AutoGenerateColumns="False" 
                  CanUserAddRows="False"
                  Margin="5,5,5,10"
                  HeadersVisibility="Column"
                  GridLinesVisibility="All"
                  AlternatingRowBackground="LightGray"
                  AlternationCount="2">
            <DataGrid.Columns>
                <DataGridTextColumn Header="开始值" 
                                    Width="*">
                    <DataGridTextColumn.Binding>
                        <Binding Path="StartValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasStartValueError}" Value="True">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="结束值" 
                                    Width="*">
                    <DataGridTextColumn.Binding>
                        <Binding Path="EndValue" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasEndValueError}" Value="True">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="类别值" 
                                    Binding="{Binding ClassValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    Width="*"/>
            </DataGrid.Columns>
        </DataGrid>
        
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="确定" 
                    Command="{Binding OKCommand}" 
                    Width="60" Height="25" 
                    Margin="0,0,5,0"/>
            <Button Content="取消" 
                    Command="{Binding CancelCommand}" 
                    Width="60" Height="25"/>
        </StackPanel>
    </Grid>
</Window>